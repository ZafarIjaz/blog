{
  "name": "blog",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "axios": "^1.4.0",
    "bootstrap": "^5.2.3",
    "react": "^18.2.0",
    "react-bootstrap": "^2.7.4",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.11.2",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "description": "Modules: 1. Users Create an authentication page where users can sign in and sign up. Users should have a name, email and password. 2. Posts A post should have a title. A post should have its content. The user can create a post. The user can edit his/her post. The user can delete his/her post. Create a posts page where all posts can be seen. Note: You are required to initialize the posts state by calling the following api endpoint: https://jsonplaceholder.typicode.com/posts 3. Comments A post can have many comments. Only authorized users can comment on the post. The user can edit his/her own comment. The user can delete his/her own comment. Note: You are required to initialize the comments for each fetched post by the calling following api endpoint accordingly: https://jsonplaceholder.typicode.com/posts/{$postId}/comments",
  "main": "index.js",
  "author": "",
  "license": "ISC"
}
